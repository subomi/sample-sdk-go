// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type CreateEventTypeRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Event Type Details
	CreateEventType CreateEventType `request:"mediaType=application/json"`
}

func (o *CreateEventTypeRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *CreateEventTypeRequest) GetCreateEventType() CreateEventType {
	if o == nil {
		return CreateEventType{}
	}
	return o.CreateEventType
}

// CreateEventTypeNotFoundError - Not Found
type CreateEventTypeNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &CreateEventTypeNotFoundError{}

func (e *CreateEventTypeNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CreateEventTypeUnauthorizedError - Unauthorized
type CreateEventTypeUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &CreateEventTypeUnauthorizedError{}

func (e *CreateEventTypeUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CreateEventTypeBadRequestError - Bad Request
type CreateEventTypeBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &CreateEventTypeBadRequestError{}

func (e *CreateEventTypeBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CreateEventTypeResponseBody - Created
type CreateEventTypeResponseBody struct {
	Message *string            `json:"message,omitempty"`
	Status  *bool              `json:"status,omitempty"`
	Data    *EventTypeResponse `json:"data,omitempty"`
}

func (o *CreateEventTypeResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *CreateEventTypeResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *CreateEventTypeResponseBody) GetData() *EventTypeResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type CreateEventTypeResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// Created
	Object *CreateEventTypeResponseBody
}

func (o *CreateEventTypeResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateEventTypeResponse) GetObject() *CreateEventTypeResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
