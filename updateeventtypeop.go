// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type UpdateEventTypeRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Event Type ID
	EventTypeID string `pathParam:"style=simple,explode=false,name=eventTypeID"`
	// Event Type Details
	UpdateEventType UpdateEventType `request:"mediaType=application/json"`
}

func (o *UpdateEventTypeRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *UpdateEventTypeRequest) GetEventTypeID() string {
	if o == nil {
		return ""
	}
	return o.EventTypeID
}

func (o *UpdateEventTypeRequest) GetUpdateEventType() UpdateEventType {
	if o == nil {
		return UpdateEventType{}
	}
	return o.UpdateEventType
}

// UpdateEventTypeNotFoundError - Not Found
type UpdateEventTypeNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &UpdateEventTypeNotFoundError{}

func (e *UpdateEventTypeNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateEventTypeUnauthorizedError - Unauthorized
type UpdateEventTypeUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &UpdateEventTypeUnauthorizedError{}

func (e *UpdateEventTypeUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateEventTypeBadRequestError - Bad Request
type UpdateEventTypeBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &UpdateEventTypeBadRequestError{}

func (e *UpdateEventTypeBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateEventTypeResponseBody - Created
type UpdateEventTypeResponseBody struct {
	Message *string            `json:"message,omitempty"`
	Status  *bool              `json:"status,omitempty"`
	Data    *EventTypeResponse `json:"data,omitempty"`
}

func (o *UpdateEventTypeResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateEventTypeResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *UpdateEventTypeResponseBody) GetData() *EventTypeResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type UpdateEventTypeResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// Created
	Object *UpdateEventTypeResponseBody
}

func (o *UpdateEventTypeResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateEventTypeResponse) GetObject() *UpdateEventTypeResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
