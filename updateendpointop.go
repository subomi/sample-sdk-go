// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type UpdateEndpointRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Endpoint ID
	EndpointID string `pathParam:"style=simple,explode=false,name=endpointID"`
	// Endpoint Details
	UpdateEndpoint UpdateEndpoint `request:"mediaType=application/json"`
}

func (o *UpdateEndpointRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *UpdateEndpointRequest) GetEndpointID() string {
	if o == nil {
		return ""
	}
	return o.EndpointID
}

func (o *UpdateEndpointRequest) GetUpdateEndpoint() UpdateEndpoint {
	if o == nil {
		return UpdateEndpoint{}
	}
	return o.UpdateEndpoint
}

// UpdateEndpointNotFoundError - Not Found
type UpdateEndpointNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &UpdateEndpointNotFoundError{}

func (e *UpdateEndpointNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateEndpointUnauthorizedError - Unauthorized
type UpdateEndpointUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &UpdateEndpointUnauthorizedError{}

func (e *UpdateEndpointUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateEndpointBadRequestError - Bad Request
type UpdateEndpointBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &UpdateEndpointBadRequestError{}

func (e *UpdateEndpointBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateEndpointResponseBody - Accepted
type UpdateEndpointResponseBody struct {
	Message *string           `json:"message,omitempty"`
	Status  *bool             `json:"status,omitempty"`
	Data    *EndpointResponse `json:"data,omitempty"`
}

func (o *UpdateEndpointResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateEndpointResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *UpdateEndpointResponseBody) GetData() *EndpointResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type UpdateEndpointResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// Accepted
	Object *UpdateEndpointResponseBody
}

func (o *UpdateEndpointResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateEndpointResponse) GetObject() *UpdateEndpointResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
