// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type TestSourceFunctionRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Function Details
	FunctionRequest FunctionRequest `request:"mediaType=application/json"`
}

func (o *TestSourceFunctionRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *TestSourceFunctionRequest) GetFunctionRequest() FunctionRequest {
	if o == nil {
		return FunctionRequest{}
	}
	return o.FunctionRequest
}

// TestSourceFunctionNotFoundError - Not Found
type TestSourceFunctionNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &TestSourceFunctionNotFoundError{}

func (e *TestSourceFunctionNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TestSourceFunctionUnauthorizedError - Unauthorized
type TestSourceFunctionUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &TestSourceFunctionUnauthorizedError{}

func (e *TestSourceFunctionUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TestSourceFunctionBadRequestError - Bad Request
type TestSourceFunctionBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &TestSourceFunctionBadRequestError{}

func (e *TestSourceFunctionBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TestSourceFunctionResponseBody - OK
type TestSourceFunctionResponseBody struct {
	Message *string           `json:"message,omitempty"`
	Status  *bool             `json:"status,omitempty"`
	Data    *FunctionResponse `json:"data,omitempty"`
}

func (o *TestSourceFunctionResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *TestSourceFunctionResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *TestSourceFunctionResponseBody) GetData() *FunctionResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type TestSourceFunctionResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *TestSourceFunctionResponseBody
}

func (o *TestSourceFunctionResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *TestSourceFunctionResponse) GetObject() *TestSourceFunctionResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
