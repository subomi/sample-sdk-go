// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type CreateSubscriptionRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Subscription details
	CreateSubscription CreateSubscription `request:"mediaType=application/json"`
}

func (o *CreateSubscriptionRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *CreateSubscriptionRequest) GetCreateSubscription() CreateSubscription {
	if o == nil {
		return CreateSubscription{}
	}
	return o.CreateSubscription
}

// CreateSubscriptionNotFoundError - Not Found
type CreateSubscriptionNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &CreateSubscriptionNotFoundError{}

func (e *CreateSubscriptionNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CreateSubscriptionUnauthorizedError - Unauthorized
type CreateSubscriptionUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &CreateSubscriptionUnauthorizedError{}

func (e *CreateSubscriptionUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CreateSubscriptionBadRequestError - Bad Request
type CreateSubscriptionBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &CreateSubscriptionBadRequestError{}

func (e *CreateSubscriptionBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CreateSubscriptionResponseBody - Created
type CreateSubscriptionResponseBody struct {
	Message *string               `json:"message,omitempty"`
	Status  *bool                 `json:"status,omitempty"`
	Data    *SubscriptionResponse `json:"data,omitempty"`
}

func (o *CreateSubscriptionResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *CreateSubscriptionResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *CreateSubscriptionResponseBody) GetData() *SubscriptionResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type CreateSubscriptionResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// Created
	Object *CreateSubscriptionResponseBody
}

func (o *CreateSubscriptionResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateSubscriptionResponse) GetObject() *CreateSubscriptionResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
