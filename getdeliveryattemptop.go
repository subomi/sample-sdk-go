// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type GetDeliveryAttemptRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// event delivery id
	EventDeliveryID string `pathParam:"style=simple,explode=false,name=eventDeliveryID"`
	// delivery attempt id
	DeliveryAttemptID string `pathParam:"style=simple,explode=false,name=deliveryAttemptID"`
}

func (o *GetDeliveryAttemptRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *GetDeliveryAttemptRequest) GetEventDeliveryID() string {
	if o == nil {
		return ""
	}
	return o.EventDeliveryID
}

func (o *GetDeliveryAttemptRequest) GetDeliveryAttemptID() string {
	if o == nil {
		return ""
	}
	return o.DeliveryAttemptID
}

// GetDeliveryAttemptNotFoundError - Not Found
type GetDeliveryAttemptNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetDeliveryAttemptNotFoundError{}

func (e *GetDeliveryAttemptNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetDeliveryAttemptUnauthorizedError - Unauthorized
type GetDeliveryAttemptUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetDeliveryAttemptUnauthorizedError{}

func (e *GetDeliveryAttemptUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetDeliveryAttemptBadRequestError - Bad Request
type GetDeliveryAttemptBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetDeliveryAttemptBadRequestError{}

func (e *GetDeliveryAttemptBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetDeliveryAttemptResponseBody - OK
type GetDeliveryAttemptResponseBody struct {
	Message *string          `json:"message,omitempty"`
	Status  *bool            `json:"status,omitempty"`
	Data    *DeliveryAttempt `json:"data,omitempty"`
}

func (o *GetDeliveryAttemptResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *GetDeliveryAttemptResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetDeliveryAttemptResponseBody) GetData() *DeliveryAttempt {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetDeliveryAttemptResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *GetDeliveryAttemptResponseBody
}

func (o *GetDeliveryAttemptResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetDeliveryAttemptResponse) GetObject() *GetDeliveryAttemptResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
