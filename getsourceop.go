// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type GetSourceRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Source ID
	SourceID string `pathParam:"style=simple,explode=false,name=sourceID"`
}

func (o *GetSourceRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *GetSourceRequest) GetSourceID() string {
	if o == nil {
		return ""
	}
	return o.SourceID
}

// GetSourceNotFoundError - Not Found
type GetSourceNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetSourceNotFoundError{}

func (e *GetSourceNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetSourceUnauthorizedError - Unauthorized
type GetSourceUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetSourceUnauthorizedError{}

func (e *GetSourceUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetSourceBadRequestError - Bad Request
type GetSourceBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetSourceBadRequestError{}

func (e *GetSourceBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetSourceResponseBody - OK
type GetSourceResponseBody struct {
	Message *string         `json:"message,omitempty"`
	Status  *bool           `json:"status,omitempty"`
	Data    *SourceResponse `json:"data,omitempty"`
}

func (o *GetSourceResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *GetSourceResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetSourceResponseBody) GetData() *SourceResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetSourceResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *GetSourceResponseBody
}

func (o *GetSourceResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetSourceResponse) GetObject() *GetSourceResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
