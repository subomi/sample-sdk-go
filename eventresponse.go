// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

type EventResponse struct {
	AcknowledgedAt *string `json:"acknowledged_at,omitempty"`
	// Deprecated
	AppID     *string `json:"app_id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	// Data is an arbitrary JSON value that gets sent as the body of the
	// webhook to the endpoints
	Data             []int64             `json:"data,omitempty"`
	DeletedAt        *string             `json:"deleted_at,omitempty"`
	EndpointMetadata []Endpoint          `json:"endpoint_metadata,omitempty"`
	Endpoints        []string            `json:"endpoints,omitempty"`
	EventType        *string             `json:"event_type,omitempty"`
	Headers          map[string][]string `json:"headers,omitempty"`
	IdempotencyKey   *string             `json:"idempotency_key,omitempty"`
	IsDuplicateEvent *bool               `json:"is_duplicate_event,omitempty"`
	Metadata         *string             `json:"metadata,omitempty"`
	ProjectID        *string             `json:"project_id,omitempty"`
	Raw              *string             `json:"raw,omitempty"`
	SourceID         *string             `json:"source_id,omitempty"`
	SourceMetadata   *Source             `json:"source_metadata,omitempty"`
	Status           *EventStatus        `json:"status,omitempty"`
	UID              *string             `json:"uid,omitempty"`
	UpdatedAt        *string             `json:"updated_at,omitempty"`
	URLQueryParams   *string             `json:"url_query_params,omitempty"`
}

func (o *EventResponse) GetAcknowledgedAt() *string {
	if o == nil {
		return nil
	}
	return o.AcknowledgedAt
}

func (o *EventResponse) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *EventResponse) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *EventResponse) GetData() []int64 {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *EventResponse) GetDeletedAt() *string {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *EventResponse) GetEndpointMetadata() []Endpoint {
	if o == nil {
		return nil
	}
	return o.EndpointMetadata
}

func (o *EventResponse) GetEndpoints() []string {
	if o == nil {
		return nil
	}
	return o.Endpoints
}

func (o *EventResponse) GetEventType() *string {
	if o == nil {
		return nil
	}
	return o.EventType
}

func (o *EventResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *EventResponse) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

func (o *EventResponse) GetIsDuplicateEvent() *bool {
	if o == nil {
		return nil
	}
	return o.IsDuplicateEvent
}

func (o *EventResponse) GetMetadata() *string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *EventResponse) GetProjectID() *string {
	if o == nil {
		return nil
	}
	return o.ProjectID
}

func (o *EventResponse) GetRaw() *string {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *EventResponse) GetSourceID() *string {
	if o == nil {
		return nil
	}
	return o.SourceID
}

func (o *EventResponse) GetSourceMetadata() *Source {
	if o == nil {
		return nil
	}
	return o.SourceMetadata
}

func (o *EventResponse) GetStatus() *EventStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *EventResponse) GetUID() *string {
	if o == nil {
		return nil
	}
	return o.UID
}

func (o *EventResponse) GetUpdatedAt() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *EventResponse) GetURLQueryParams() *string {
	if o == nil {
		return nil
	}
	return o.URLQueryParams
}
