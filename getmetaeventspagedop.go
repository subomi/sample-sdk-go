// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
	"fmt"
)

type GetMetaEventsPagedDirection string

const (
	GetMetaEventsPagedDirectionNext GetMetaEventsPagedDirection = "next"
	GetMetaEventsPagedDirectionPrev GetMetaEventsPagedDirection = "prev"
)

func (e GetMetaEventsPagedDirection) ToPointer() *GetMetaEventsPagedDirection {
	return &e
}
func (e *GetMetaEventsPagedDirection) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "next":
		fallthrough
	case "prev":
		*e = GetMetaEventsPagedDirection(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMetaEventsPagedDirection: %v", v)
	}
}

type GetMetaEventsPagedRequest struct {
	// Project ID
	ProjectID string                       `pathParam:"style=simple,explode=false,name=projectID"`
	Direction *GetMetaEventsPagedDirection `queryParam:"style=form,explode=true,name=direction"`
	// The end date
	EndDate *string `queryParam:"style=form,explode=true,name=endDate"`
	// A pagination cursor to fetch the next page of a list
	NextPageCursor *string `queryParam:"style=form,explode=true,name=next_page_cursor"`
	// The number of items to return per page
	PerPage *int64 `queryParam:"style=form,explode=true,name=perPage"`
	// A pagination cursor to fetch the previous page of a list
	PrevPageCursor *string `queryParam:"style=form,explode=true,name=prev_page_cursor"`
	// Sort order, values are `ASC` or `DESC`, defaults to `DESC`
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// The start date
	StartDate *string `queryParam:"style=form,explode=true,name=startDate"`
}

func (o *GetMetaEventsPagedRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *GetMetaEventsPagedRequest) GetDirection() *GetMetaEventsPagedDirection {
	if o == nil {
		return nil
	}
	return o.Direction
}

func (o *GetMetaEventsPagedRequest) GetEndDate() *string {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *GetMetaEventsPagedRequest) GetNextPageCursor() *string {
	if o == nil {
		return nil
	}
	return o.NextPageCursor
}

func (o *GetMetaEventsPagedRequest) GetPerPage() *int64 {
	if o == nil {
		return nil
	}
	return o.PerPage
}

func (o *GetMetaEventsPagedRequest) GetPrevPageCursor() *string {
	if o == nil {
		return nil
	}
	return o.PrevPageCursor
}

func (o *GetMetaEventsPagedRequest) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *GetMetaEventsPagedRequest) GetStartDate() *string {
	if o == nil {
		return nil
	}
	return o.StartDate
}

// GetMetaEventsPagedNotFoundError - Not Found
type GetMetaEventsPagedNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetMetaEventsPagedNotFoundError{}

func (e *GetMetaEventsPagedNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetMetaEventsPagedUnauthorizedError - Unauthorized
type GetMetaEventsPagedUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetMetaEventsPagedUnauthorizedError{}

func (e *GetMetaEventsPagedUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetMetaEventsPagedBadRequestError - Bad Request
type GetMetaEventsPagedBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetMetaEventsPagedBadRequestError{}

func (e *GetMetaEventsPagedBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type GetMetaEventsPagedData struct {
	Content    []MetaEventResponse `json:"content,omitempty"`
	Pagination *PaginationData     `json:"pagination,omitempty"`
}

func (o *GetMetaEventsPagedData) GetContent() []MetaEventResponse {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *GetMetaEventsPagedData) GetPagination() *PaginationData {
	if o == nil {
		return nil
	}
	return o.Pagination
}

// GetMetaEventsPagedResponseBody - OK
type GetMetaEventsPagedResponseBody struct {
	Message *string                 `json:"message,omitempty"`
	Status  *bool                   `json:"status,omitempty"`
	Data    *GetMetaEventsPagedData `json:"data,omitempty"`
}

func (o *GetMetaEventsPagedResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *GetMetaEventsPagedResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetMetaEventsPagedResponseBody) GetData() *GetMetaEventsPagedData {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetMetaEventsPagedResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *GetMetaEventsPagedResponseBody
}

func (o *GetMetaEventsPagedResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetMetaEventsPagedResponse) GetObject() *GetMetaEventsPagedResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
