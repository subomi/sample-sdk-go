// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

type UpdateFilterRequest struct {
	// Body matching criteria (optional)
	Body map[string]any `json:"body,omitempty"`
	// Type of event this filter applies to (optional)
	EventType *string `json:"event_type,omitempty"`
	// Header matching criteria (optional)
	Headers map[string]any `json:"headers,omitempty"`
	// Whether the filter uses flattened JSON paths (optional)
	IsFlattened *bool `json:"is_flattened,omitempty"`
}

func (o *UpdateFilterRequest) GetBody() map[string]any {
	if o == nil {
		return nil
	}
	return o.Body
}

func (o *UpdateFilterRequest) GetEventType() *string {
	if o == nil {
		return nil
	}
	return o.EventType
}

func (o *UpdateFilterRequest) GetHeaders() map[string]any {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *UpdateFilterRequest) GetIsFlattened() *bool {
	if o == nil {
		return nil
	}
	return o.IsFlattened
}
