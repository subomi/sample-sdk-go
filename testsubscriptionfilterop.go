// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type TestSubscriptionFilterRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Filter Details
	TestFilter TestFilter `request:"mediaType=application/json"`
}

func (o *TestSubscriptionFilterRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *TestSubscriptionFilterRequest) GetTestFilter() TestFilter {
	if o == nil {
		return TestFilter{}
	}
	return o.TestFilter
}

// TestSubscriptionFilterNotFoundError - Not Found
type TestSubscriptionFilterNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &TestSubscriptionFilterNotFoundError{}

func (e *TestSubscriptionFilterNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TestSubscriptionFilterUnauthorizedError - Unauthorized
type TestSubscriptionFilterUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &TestSubscriptionFilterUnauthorizedError{}

func (e *TestSubscriptionFilterUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TestSubscriptionFilterBadRequestError - Bad Request
type TestSubscriptionFilterBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &TestSubscriptionFilterBadRequestError{}

func (e *TestSubscriptionFilterBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TestSubscriptionFilterResponseBody - OK
type TestSubscriptionFilterResponseBody struct {
	Message *string `json:"message,omitempty"`
	Status  *bool   `json:"status,omitempty"`
	Data    *bool   `json:"data,omitempty"`
}

func (o *TestSubscriptionFilterResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *TestSubscriptionFilterResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *TestSubscriptionFilterResponseBody) GetData() *bool {
	if o == nil {
		return nil
	}
	return o.Data
}

type TestSubscriptionFilterResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *TestSubscriptionFilterResponseBody
}

func (o *TestSubscriptionFilterResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *TestSubscriptionFilterResponse) GetObject() *TestSubscriptionFilterResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
