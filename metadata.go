// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

type Metadata struct {
	// Data to be sent to endpoint.
	Data            []int64 `json:"data,omitempty"`
	IntervalSeconds *int64  `json:"interval_seconds,omitempty"`
	MaxRetrySeconds *int64  `json:"max_retry_seconds,omitempty"`
	NextSendTime    *string `json:"next_send_time,omitempty"`
	// NumTrials: number of times we have tried to deliver this Event to
	// an application
	NumTrials  *int64            `json:"num_trials,omitempty"`
	Raw        *string           `json:"raw,omitempty"`
	RetryLimit *int64            `json:"retry_limit,omitempty"`
	Strategy   *StrategyProvider `json:"strategy,omitempty"`
}

func (o *Metadata) GetData() []int64 {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *Metadata) GetIntervalSeconds() *int64 {
	if o == nil {
		return nil
	}
	return o.IntervalSeconds
}

func (o *Metadata) GetMaxRetrySeconds() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxRetrySeconds
}

func (o *Metadata) GetNextSendTime() *string {
	if o == nil {
		return nil
	}
	return o.NextSendTime
}

func (o *Metadata) GetNumTrials() *int64 {
	if o == nil {
		return nil
	}
	return o.NumTrials
}

func (o *Metadata) GetRaw() *string {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *Metadata) GetRetryLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.RetryLimit
}

func (o *Metadata) GetStrategy() *StrategyProvider {
	if o == nil {
		return nil
	}
	return o.Strategy
}
