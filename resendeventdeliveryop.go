// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type ResendEventDeliveryRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// event delivery id
	EventDeliveryID string `pathParam:"style=simple,explode=false,name=eventDeliveryID"`
}

func (o *ResendEventDeliveryRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *ResendEventDeliveryRequest) GetEventDeliveryID() string {
	if o == nil {
		return ""
	}
	return o.EventDeliveryID
}

// ResendEventDeliveryNotFoundError - Not Found
type ResendEventDeliveryNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &ResendEventDeliveryNotFoundError{}

func (e *ResendEventDeliveryNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ResendEventDeliveryUnauthorizedError - Unauthorized
type ResendEventDeliveryUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &ResendEventDeliveryUnauthorizedError{}

func (e *ResendEventDeliveryUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ResendEventDeliveryBadRequestError - Bad Request
type ResendEventDeliveryBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &ResendEventDeliveryBadRequestError{}

func (e *ResendEventDeliveryBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ResendEventDeliveryResponseBody - OK
type ResendEventDeliveryResponseBody struct {
	Message *string                `json:"message,omitempty"`
	Status  *bool                  `json:"status,omitempty"`
	Data    *EventDeliveryResponse `json:"data,omitempty"`
}

func (o *ResendEventDeliveryResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ResendEventDeliveryResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *ResendEventDeliveryResponseBody) GetData() *EventDeliveryResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type ResendEventDeliveryResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *ResendEventDeliveryResponseBody
}

func (o *ResendEventDeliveryResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ResendEventDeliveryResponse) GetObject() *ResendEventDeliveryResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
