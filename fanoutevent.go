// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

// FanoutEventData - Data is an arbitrary JSON value that gets sent as the body of the
// webhook to the endpoints
type FanoutEventData struct {
}

type FanoutEvent struct {
	// Specifies custom headers you want convoy to add when the event is dispatched to your endpoint
	CustomHeaders map[string]string `json:"custom_headers,omitempty"`
	// Data is an arbitrary JSON value that gets sent as the body of the
	// webhook to the endpoints
	Data *FanoutEventData `json:"data,omitempty"`
	// Event Type is used for filtering and debugging e.g invoice.paid
	EventType *string `json:"event_type,omitempty"`
	// Specify a key for event deduplication
	IdempotencyKey *string `json:"idempotency_key,omitempty"`
	// Used for fanout, sends this event to all endpoints with this OwnerID.
	OwnerID *string `json:"owner_id,omitempty"`
}

func (o *FanoutEvent) GetCustomHeaders() map[string]string {
	if o == nil {
		return nil
	}
	return o.CustomHeaders
}

func (o *FanoutEvent) GetData() *FanoutEventData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *FanoutEvent) GetEventType() *string {
	if o == nil {
		return nil
	}
	return o.EventType
}

func (o *FanoutEvent) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

func (o *FanoutEvent) GetOwnerID() *string {
	if o == nil {
		return nil
	}
	return o.OwnerID
}
