// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type ResendMetaEventRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// meta event id
	MetaEventID string `pathParam:"style=simple,explode=false,name=metaEventID"`
}

func (o *ResendMetaEventRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *ResendMetaEventRequest) GetMetaEventID() string {
	if o == nil {
		return ""
	}
	return o.MetaEventID
}

// ResendMetaEventNotFoundError - Not Found
type ResendMetaEventNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &ResendMetaEventNotFoundError{}

func (e *ResendMetaEventNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ResendMetaEventUnauthorizedError - Unauthorized
type ResendMetaEventUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &ResendMetaEventUnauthorizedError{}

func (e *ResendMetaEventUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ResendMetaEventBadRequestError - Bad Request
type ResendMetaEventBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &ResendMetaEventBadRequestError{}

func (e *ResendMetaEventBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ResendMetaEventResponseBody - OK
type ResendMetaEventResponseBody struct {
	Message *string            `json:"message,omitempty"`
	Status  *bool              `json:"status,omitempty"`
	Data    *MetaEventResponse `json:"data,omitempty"`
}

func (o *ResendMetaEventResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ResendMetaEventResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *ResendMetaEventResponseBody) GetData() *MetaEventResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type ResendMetaEventResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *ResendMetaEventResponseBody
}

func (o *ResendMetaEventResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ResendMetaEventResponse) GetObject() *ResendMetaEventResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
