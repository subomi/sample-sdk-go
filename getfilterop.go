// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type GetFilterRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Subscription ID
	SubscriptionID string `pathParam:"style=simple,explode=false,name=subscriptionID"`
	// Filter ID
	FilterID string `pathParam:"style=simple,explode=false,name=filterID"`
}

func (o *GetFilterRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *GetFilterRequest) GetSubscriptionID() string {
	if o == nil {
		return ""
	}
	return o.SubscriptionID
}

func (o *GetFilterRequest) GetFilterID() string {
	if o == nil {
		return ""
	}
	return o.FilterID
}

// GetFilterNotFoundError - Not Found
type GetFilterNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetFilterNotFoundError{}

func (e *GetFilterNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetFilterUnauthorizedError - Unauthorized
type GetFilterUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetFilterUnauthorizedError{}

func (e *GetFilterUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetFilterBadRequestError - Bad Request
type GetFilterBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetFilterBadRequestError{}

func (e *GetFilterBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetFilterResponseBody - OK
type GetFilterResponseBody struct {
	Message *string         `json:"message,omitempty"`
	Status  *bool           `json:"status,omitempty"`
	Data    *FilterResponse `json:"data,omitempty"`
}

func (o *GetFilterResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *GetFilterResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetFilterResponseBody) GetData() *FilterResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetFilterResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *GetFilterResponseBody
}

func (o *GetFilterResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetFilterResponse) GetObject() *GetFilterResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
