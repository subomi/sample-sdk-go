// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

type UpdateSource struct {
	// Function is a javascript function used to mutate the payload
	// immediately after ingesting an event
	BodyFunction *string `json:"body_function,omitempty"`
	// Custom response is used to define a custom response for incoming
	// webhooks project sources only.
	CustomResponse *UpdateCustomResponse `json:"custom_response,omitempty"`
	// Soecfy header you want convoy to save from the ingest request and forward to your endpoints when the event is dispatched.
	ForwardHeaders []string `json:"forward_headers,omitempty"`
	// Function is a javascript function used to mutate the headers
	// immediately after ingesting an event
	HeaderFunction *string `json:"header_function,omitempty"`
	// IdempotencyKeys are used to specify parts of a webhook request to uniquely
	// identify the event in an incoming webhooks project.
	IdempotencyKeys []string `json:"idempotency_keys,omitempty"`
	// This is used to manually enable/disable the source.
	IsDisabled *bool `json:"is_disabled,omitempty"`
	// Source name.
	Name *string `json:"name,omitempty"`
	// PubSub are used to specify message broker sources for outgoing
	// webhooks projects, you only need to specify this when the source type is `pub_sub`.
	PubSub *PubSubConfig `json:"pub_sub,omitempty"`
	// Source Type.
	Type *SourceType `json:"type,omitempty"`
	// Verifiers are used to verify webhook events ingested in incoming
	// webhooks projects.  If set, type is required and match the verifier
	// type object you choose.
	Verifier *VerifierConfig `json:"verifier,omitempty"`
}

func (o *UpdateSource) GetBodyFunction() *string {
	if o == nil {
		return nil
	}
	return o.BodyFunction
}

func (o *UpdateSource) GetCustomResponse() *UpdateCustomResponse {
	if o == nil {
		return nil
	}
	return o.CustomResponse
}

func (o *UpdateSource) GetForwardHeaders() []string {
	if o == nil {
		return nil
	}
	return o.ForwardHeaders
}

func (o *UpdateSource) GetHeaderFunction() *string {
	if o == nil {
		return nil
	}
	return o.HeaderFunction
}

func (o *UpdateSource) GetIdempotencyKeys() []string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKeys
}

func (o *UpdateSource) GetIsDisabled() *bool {
	if o == nil {
		return nil
	}
	return o.IsDisabled
}

func (o *UpdateSource) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateSource) GetPubSub() *PubSubConfig {
	if o == nil {
		return nil
	}
	return o.PubSub
}

func (o *UpdateSource) GetType() *SourceType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *UpdateSource) GetVerifier() *VerifierConfig {
	if o == nil {
		return nil
	}
	return o.Verifier
}
