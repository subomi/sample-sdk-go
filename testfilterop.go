// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type TestFilterRequestRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Subscription ID
	SubscriptionID string `pathParam:"style=simple,explode=false,name=subscriptionID"`
	// Event Type
	EventType string `pathParam:"style=simple,explode=false,name=eventType"`
	// Payload to test
	TestFilterRequest TestFilterRequest `request:"mediaType=application/json"`
}

func (o *TestFilterRequestRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *TestFilterRequestRequest) GetSubscriptionID() string {
	if o == nil {
		return ""
	}
	return o.SubscriptionID
}

func (o *TestFilterRequestRequest) GetEventType() string {
	if o == nil {
		return ""
	}
	return o.EventType
}

func (o *TestFilterRequestRequest) GetTestFilterRequest() TestFilterRequest {
	if o == nil {
		return TestFilterRequest{}
	}
	return o.TestFilterRequest
}

// TestFilterNotFoundError - Not Found
type TestFilterNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &TestFilterNotFoundError{}

func (e *TestFilterNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TestFilterUnauthorizedError - Unauthorized
type TestFilterUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &TestFilterUnauthorizedError{}

func (e *TestFilterUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TestFilterBadRequestError - Bad Request
type TestFilterBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &TestFilterBadRequestError{}

func (e *TestFilterBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TestFilterResponseBody - OK
type TestFilterResponseBody struct {
	Message *string             `json:"message,omitempty"`
	Status  *bool               `json:"status,omitempty"`
	Data    *TestFilterResponse `json:"data,omitempty"`
}

func (o *TestFilterResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *TestFilterResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *TestFilterResponseBody) GetData() *TestFilterResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type TestFilterResponseResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *TestFilterResponseBody
}

func (o *TestFilterResponseResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *TestFilterResponseResponse) GetObject() *TestFilterResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
