// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type DeleteSubscriptionRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// subscription id
	SubscriptionID string `pathParam:"style=simple,explode=false,name=subscriptionID"`
}

func (o *DeleteSubscriptionRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *DeleteSubscriptionRequest) GetSubscriptionID() string {
	if o == nil {
		return ""
	}
	return o.SubscriptionID
}

// DeleteSubscriptionNotFoundError - Not Found
type DeleteSubscriptionNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &DeleteSubscriptionNotFoundError{}

func (e *DeleteSubscriptionNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeleteSubscriptionUnauthorizedError - Unauthorized
type DeleteSubscriptionUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &DeleteSubscriptionUnauthorizedError{}

func (e *DeleteSubscriptionUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeleteSubscriptionBadRequestError - Bad Request
type DeleteSubscriptionBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &DeleteSubscriptionBadRequestError{}

func (e *DeleteSubscriptionBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeleteSubscriptionResponseBody - OK
type DeleteSubscriptionResponseBody struct {
	Message *string `json:"message,omitempty"`
	Status  *bool   `json:"status,omitempty"`
	Data    *Object `json:"data,omitempty"`
}

func (o *DeleteSubscriptionResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *DeleteSubscriptionResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *DeleteSubscriptionResponseBody) GetData() *Object {
	if o == nil {
		return nil
	}
	return o.Data
}

type DeleteSubscriptionResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *DeleteSubscriptionResponseBody
}

func (o *DeleteSubscriptionResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DeleteSubscriptionResponse) GetObject() *DeleteSubscriptionResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
