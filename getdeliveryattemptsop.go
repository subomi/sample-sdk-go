// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type GetDeliveryAttemptsRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// event delivery id
	EventDeliveryID string `pathParam:"style=simple,explode=false,name=eventDeliveryID"`
}

func (o *GetDeliveryAttemptsRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *GetDeliveryAttemptsRequest) GetEventDeliveryID() string {
	if o == nil {
		return ""
	}
	return o.EventDeliveryID
}

// GetDeliveryAttemptsNotFoundError - Not Found
type GetDeliveryAttemptsNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetDeliveryAttemptsNotFoundError{}

func (e *GetDeliveryAttemptsNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetDeliveryAttemptsUnauthorizedError - Unauthorized
type GetDeliveryAttemptsUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetDeliveryAttemptsUnauthorizedError{}

func (e *GetDeliveryAttemptsUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetDeliveryAttemptsBadRequestError - Bad Request
type GetDeliveryAttemptsBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetDeliveryAttemptsBadRequestError{}

func (e *GetDeliveryAttemptsBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetDeliveryAttemptsResponseBody - OK
type GetDeliveryAttemptsResponseBody struct {
	Message *string           `json:"message,omitempty"`
	Status  *bool             `json:"status,omitempty"`
	Data    []DeliveryAttempt `json:"data,omitempty"`
}

func (o *GetDeliveryAttemptsResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *GetDeliveryAttemptsResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetDeliveryAttemptsResponseBody) GetData() []DeliveryAttempt {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetDeliveryAttemptsResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *GetDeliveryAttemptsResponseBody
}

func (o *GetDeliveryAttemptsResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetDeliveryAttemptsResponse) GetObject() *GetDeliveryAttemptsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
