// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type CreateBroadcastEventRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Broadcast Event Details
	BroadcastEvent BroadcastEvent `request:"mediaType=application/json"`
}

func (o *CreateBroadcastEventRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *CreateBroadcastEventRequest) GetBroadcastEvent() BroadcastEvent {
	if o == nil {
		return BroadcastEvent{}
	}
	return o.BroadcastEvent
}

// CreateBroadcastEventNotFoundError - Not Found
type CreateBroadcastEventNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &CreateBroadcastEventNotFoundError{}

func (e *CreateBroadcastEventNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CreateBroadcastEventUnauthorizedError - Unauthorized
type CreateBroadcastEventUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &CreateBroadcastEventUnauthorizedError{}

func (e *CreateBroadcastEventUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CreateBroadcastEventBadRequestError - Bad Request
type CreateBroadcastEventBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &CreateBroadcastEventBadRequestError{}

func (e *CreateBroadcastEventBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CreateBroadcastEventResponseBody - Created
type CreateBroadcastEventResponseBody struct {
	Message *string        `json:"message,omitempty"`
	Status  *bool          `json:"status,omitempty"`
	Data    *EventResponse `json:"data,omitempty"`
}

func (o *CreateBroadcastEventResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *CreateBroadcastEventResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *CreateBroadcastEventResponseBody) GetData() *EventResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type CreateBroadcastEventResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// Created
	Object *CreateBroadcastEventResponseBody
}

func (o *CreateBroadcastEventResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateBroadcastEventResponse) GetObject() *CreateBroadcastEventResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
