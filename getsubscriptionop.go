// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type GetSubscriptionRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// subscription id
	SubscriptionID string `pathParam:"style=simple,explode=false,name=subscriptionID"`
}

func (o *GetSubscriptionRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *GetSubscriptionRequest) GetSubscriptionID() string {
	if o == nil {
		return ""
	}
	return o.SubscriptionID
}

// GetSubscriptionNotFoundError - Not Found
type GetSubscriptionNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetSubscriptionNotFoundError{}

func (e *GetSubscriptionNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetSubscriptionUnauthorizedError - Unauthorized
type GetSubscriptionUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetSubscriptionUnauthorizedError{}

func (e *GetSubscriptionUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetSubscriptionBadRequestError - Bad Request
type GetSubscriptionBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetSubscriptionBadRequestError{}

func (e *GetSubscriptionBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetSubscriptionResponseBody - OK
type GetSubscriptionResponseBody struct {
	Message *string               `json:"message,omitempty"`
	Status  *bool                 `json:"status,omitempty"`
	Data    *SubscriptionResponse `json:"data,omitempty"`
}

func (o *GetSubscriptionResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *GetSubscriptionResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetSubscriptionResponseBody) GetData() *SubscriptionResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetSubscriptionResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *GetSubscriptionResponseBody
}

func (o *GetSubscriptionResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetSubscriptionResponse) GetObject() *GetSubscriptionResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
