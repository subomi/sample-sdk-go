// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type UpdateFilterRequestRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Subscription ID
	SubscriptionID string `pathParam:"style=simple,explode=false,name=subscriptionID"`
	// Filter ID
	FilterID string `pathParam:"style=simple,explode=false,name=filterID"`
	// Updated filter
	UpdateFilterRequest UpdateFilterRequest `request:"mediaType=application/json"`
}

func (o *UpdateFilterRequestRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *UpdateFilterRequestRequest) GetSubscriptionID() string {
	if o == nil {
		return ""
	}
	return o.SubscriptionID
}

func (o *UpdateFilterRequestRequest) GetFilterID() string {
	if o == nil {
		return ""
	}
	return o.FilterID
}

func (o *UpdateFilterRequestRequest) GetUpdateFilterRequest() UpdateFilterRequest {
	if o == nil {
		return UpdateFilterRequest{}
	}
	return o.UpdateFilterRequest
}

// UpdateFilterNotFoundError - Not Found
type UpdateFilterNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &UpdateFilterNotFoundError{}

func (e *UpdateFilterNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateFilterUnauthorizedError - Unauthorized
type UpdateFilterUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &UpdateFilterUnauthorizedError{}

func (e *UpdateFilterUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateFilterBadRequestError - Bad Request
type UpdateFilterBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &UpdateFilterBadRequestError{}

func (e *UpdateFilterBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateFilterResponseBody - OK
type UpdateFilterResponseBody struct {
	Message *string         `json:"message,omitempty"`
	Status  *bool           `json:"status,omitempty"`
	Data    *FilterResponse `json:"data,omitempty"`
}

func (o *UpdateFilterResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateFilterResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *UpdateFilterResponseBody) GetData() *FilterResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type UpdateFilterResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *UpdateFilterResponseBody
}

func (o *UpdateFilterResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateFilterResponse) GetObject() *UpdateFilterResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
