// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type GetFiltersRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Subscription ID
	SubscriptionID string `pathParam:"style=simple,explode=false,name=subscriptionID"`
}

func (o *GetFiltersRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *GetFiltersRequest) GetSubscriptionID() string {
	if o == nil {
		return ""
	}
	return o.SubscriptionID
}

// GetFiltersNotFoundError - Not Found
type GetFiltersNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetFiltersNotFoundError{}

func (e *GetFiltersNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetFiltersUnauthorizedError - Unauthorized
type GetFiltersUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetFiltersUnauthorizedError{}

func (e *GetFiltersUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetFiltersBadRequestError - Bad Request
type GetFiltersBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetFiltersBadRequestError{}

func (e *GetFiltersBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetFiltersResponseBody - OK
type GetFiltersResponseBody struct {
	Message *string          `json:"message,omitempty"`
	Status  *bool            `json:"status,omitempty"`
	Data    []FilterResponse `json:"data,omitempty"`
}

func (o *GetFiltersResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *GetFiltersResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetFiltersResponseBody) GetData() []FilterResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetFiltersResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *GetFiltersResponseBody
}

func (o *GetFiltersResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetFiltersResponse) GetObject() *GetFiltersResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
