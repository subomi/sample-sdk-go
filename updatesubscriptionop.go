// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type UpdateSubscriptionRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// subscription id
	SubscriptionID string `pathParam:"style=simple,explode=false,name=subscriptionID"`
	// Subscription Details
	UpdateSubscription UpdateSubscription `request:"mediaType=application/json"`
}

func (o *UpdateSubscriptionRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *UpdateSubscriptionRequest) GetSubscriptionID() string {
	if o == nil {
		return ""
	}
	return o.SubscriptionID
}

func (o *UpdateSubscriptionRequest) GetUpdateSubscription() UpdateSubscription {
	if o == nil {
		return UpdateSubscription{}
	}
	return o.UpdateSubscription
}

// UpdateSubscriptionNotFoundError - Not Found
type UpdateSubscriptionNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &UpdateSubscriptionNotFoundError{}

func (e *UpdateSubscriptionNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateSubscriptionUnauthorizedError - Unauthorized
type UpdateSubscriptionUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &UpdateSubscriptionUnauthorizedError{}

func (e *UpdateSubscriptionUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateSubscriptionBadRequestError - Bad Request
type UpdateSubscriptionBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &UpdateSubscriptionBadRequestError{}

func (e *UpdateSubscriptionBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateSubscriptionResponseBody - Accepted
type UpdateSubscriptionResponseBody struct {
	Message *string               `json:"message,omitempty"`
	Status  *bool                 `json:"status,omitempty"`
	Data    *SubscriptionResponse `json:"data,omitempty"`
}

func (o *UpdateSubscriptionResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateSubscriptionResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *UpdateSubscriptionResponseBody) GetData() *SubscriptionResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type UpdateSubscriptionResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// Accepted
	Object *UpdateSubscriptionResponseBody
}

func (o *UpdateSubscriptionResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateSubscriptionResponse) GetObject() *UpdateSubscriptionResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
