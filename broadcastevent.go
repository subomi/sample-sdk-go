// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

// BroadcastEventData - Data is an arbitrary JSON value that gets sent as the body of the
// webhook to the endpoints
type BroadcastEventData struct {
}

type BroadcastEvent struct {
	AcknowledgedAt *string `json:"acknowledged_at,omitempty"`
	// Specifies custom headers you want convoy to add when the event is dispatched to your endpoint
	CustomHeaders map[string]string `json:"custom_headers,omitempty"`
	// Data is an arbitrary JSON value that gets sent as the body of the
	// webhook to the endpoints
	Data *BroadcastEventData `json:"data,omitempty"`
	// Event Type is used for filtering and debugging e.g invoice.paid
	EventType *string `json:"event_type,omitempty"`
	// Specify a key for event deduplication
	IdempotencyKey *string `json:"idempotency_key,omitempty"`
}

func (o *BroadcastEvent) GetAcknowledgedAt() *string {
	if o == nil {
		return nil
	}
	return o.AcknowledgedAt
}

func (o *BroadcastEvent) GetCustomHeaders() map[string]string {
	if o == nil {
		return nil
	}
	return o.CustomHeaders
}

func (o *BroadcastEvent) GetData() *BroadcastEventData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *BroadcastEvent) GetEventType() *string {
	if o == nil {
		return nil
	}
	return o.EventType
}

func (o *BroadcastEvent) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}
