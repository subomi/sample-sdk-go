// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

type CreateSource struct {
	// Function is a javascript function used to mutate the payload
	// immediately after ingesting an event
	BodyFunction *string `json:"body_function,omitempty"`
	// Custom response is used to define a custom response for incoming
	// webhooks project sources only.
	CustomResponse *CustomResponse `json:"custom_response,omitempty"`
	// Function is a javascript function used to mutate the headers
	// immediately after ingesting an event
	HeaderFunction *string `json:"header_function,omitempty"`
	// IdempotencyKeys are used to specify parts of a webhook request to uniquely
	// identify the event in an incoming webhooks project.
	IdempotencyKeys []string `json:"idempotency_keys,omitempty"`
	// Source name.
	Name *string `json:"name,omitempty"`
	// Use this to specify one of our predefined source types.
	Provider *SourceProvider `json:"provider,omitempty"`
	// PubSub are used to specify message broker sources for outgoing
	// webhooks projects.
	PubSub *PubSubConfig `json:"pub_sub,omitempty"`
	// Source Type.
	Type *SourceType `json:"type,omitempty"`
	// Verifiers are used to verify webhook events ingested in incoming
	// webhooks projects. If set, type is required and match the verifier
	// type object you choose.
	Verifier *VerifierConfig `json:"verifier,omitempty"`
}

func (o *CreateSource) GetBodyFunction() *string {
	if o == nil {
		return nil
	}
	return o.BodyFunction
}

func (o *CreateSource) GetCustomResponse() *CustomResponse {
	if o == nil {
		return nil
	}
	return o.CustomResponse
}

func (o *CreateSource) GetHeaderFunction() *string {
	if o == nil {
		return nil
	}
	return o.HeaderFunction
}

func (o *CreateSource) GetIdempotencyKeys() []string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKeys
}

func (o *CreateSource) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CreateSource) GetProvider() *SourceProvider {
	if o == nil {
		return nil
	}
	return o.Provider
}

func (o *CreateSource) GetPubSub() *PubSubConfig {
	if o == nil {
		return nil
	}
	return o.PubSub
}

func (o *CreateSource) GetType() *SourceType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *CreateSource) GetVerifier() *VerifierConfig {
	if o == nil {
		return nil
	}
	return o.Verifier
}
