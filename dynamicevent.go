// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

// DynamicEventData - Data is an arbitrary JSON value that gets sent as the body of the
// webhook to the endpoints
type DynamicEventData struct {
}

type DynamicEvent struct {
	// Specifies custom headers you want convoy to add when the event is dispatched to your endpoint
	CustomHeaders map[string]string `json:"custom_headers,omitempty"`
	// Data is an arbitrary JSON value that gets sent as the body of the
	// webhook to the endpoints
	Data *DynamicEventData `json:"data,omitempty"`
	// Event Type is used for filtering and debugging e.g invoice.paid
	EventType *string `json:"event_type,omitempty"`
	// A list of event types for the subscription filter config
	EventTypes []string `json:"event_types,omitempty"`
	// Specify a key for event deduplication
	IdempotencyKey *string `json:"idempotency_key,omitempty"`
	// Endpoint's webhook secret. If not provided, Convoy autogenerates one for the endpoint.
	Secret *string `json:"secret,omitempty"`
	// URL is the endpoint's URL prefixed with https. non-https urls are currently
	// not supported.
	URL *string `json:"url,omitempty"`
}

func (o *DynamicEvent) GetCustomHeaders() map[string]string {
	if o == nil {
		return nil
	}
	return o.CustomHeaders
}

func (o *DynamicEvent) GetData() *DynamicEventData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *DynamicEvent) GetEventType() *string {
	if o == nil {
		return nil
	}
	return o.EventType
}

func (o *DynamicEvent) GetEventTypes() []string {
	if o == nil {
		return nil
	}
	return o.EventTypes
}

func (o *DynamicEvent) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

func (o *DynamicEvent) GetSecret() *string {
	if o == nil {
		return nil
	}
	return o.Secret
}

func (o *DynamicEvent) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}
