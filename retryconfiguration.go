// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

type RetryConfiguration struct {
	// Used to specify a valid Go time duration e.g 10s, 1h3m for how long to wait between event delivery retries
	Duration *string `json:"duration,omitempty"`
	// Used to specify a time in seconds for how long to wait between event delivery retries,
	IntervalSeconds *int64 `json:"interval_seconds,omitempty"`
	// Used to specify the max number of retries
	RetryCount *int64 `json:"retry_count,omitempty"`
	// Retry Strategy type
	Type *StrategyProvider `json:"type,omitempty"`
}

func (o *RetryConfiguration) GetDuration() *string {
	if o == nil {
		return nil
	}
	return o.Duration
}

func (o *RetryConfiguration) GetIntervalSeconds() *int64 {
	if o == nil {
		return nil
	}
	return o.IntervalSeconds
}

func (o *RetryConfiguration) GetRetryCount() *int64 {
	if o == nil {
		return nil
	}
	return o.RetryCount
}

func (o *RetryConfiguration) GetType() *StrategyProvider {
	if o == nil {
		return nil
	}
	return o.Type
}
