// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type GetEndpointRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Endpoint ID
	EndpointID string `pathParam:"style=simple,explode=false,name=endpointID"`
}

func (o *GetEndpointRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *GetEndpointRequest) GetEndpointID() string {
	if o == nil {
		return ""
	}
	return o.EndpointID
}

// GetEndpointNotFoundError - Not Found
type GetEndpointNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetEndpointNotFoundError{}

func (e *GetEndpointNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetEndpointUnauthorizedError - Unauthorized
type GetEndpointUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetEndpointUnauthorizedError{}

func (e *GetEndpointUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetEndpointBadRequestError - Bad Request
type GetEndpointBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &GetEndpointBadRequestError{}

func (e *GetEndpointBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GetEndpointResponseBody - OK
type GetEndpointResponseBody struct {
	Message *string           `json:"message,omitempty"`
	Status  *bool             `json:"status,omitempty"`
	Data    *EndpointResponse `json:"data,omitempty"`
}

func (o *GetEndpointResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *GetEndpointResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetEndpointResponseBody) GetData() *EndpointResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetEndpointResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *GetEndpointResponseBody
}

func (o *GetEndpointResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetEndpointResponse) GetObject() *GetEndpointResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
