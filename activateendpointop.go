// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type ActivateEndpointRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Endpoint ID
	EndpointID string `pathParam:"style=simple,explode=false,name=endpointID"`
}

func (o *ActivateEndpointRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *ActivateEndpointRequest) GetEndpointID() string {
	if o == nil {
		return ""
	}
	return o.EndpointID
}

// ActivateEndpointNotFoundError - Not Found
type ActivateEndpointNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &ActivateEndpointNotFoundError{}

func (e *ActivateEndpointNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ActivateEndpointUnauthorizedError - Unauthorized
type ActivateEndpointUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &ActivateEndpointUnauthorizedError{}

func (e *ActivateEndpointUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ActivateEndpointBadRequestError - Bad Request
type ActivateEndpointBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &ActivateEndpointBadRequestError{}

func (e *ActivateEndpointBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ActivateEndpointResponseBody - Accepted
type ActivateEndpointResponseBody struct {
	Message *string           `json:"message,omitempty"`
	Status  *bool             `json:"status,omitempty"`
	Data    *EndpointResponse `json:"data,omitempty"`
}

func (o *ActivateEndpointResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ActivateEndpointResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *ActivateEndpointResponseBody) GetData() *EndpointResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type ActivateEndpointResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// Accepted
	Object *ActivateEndpointResponseBody
}

func (o *ActivateEndpointResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ActivateEndpointResponse) GetObject() *ActivateEndpointResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
