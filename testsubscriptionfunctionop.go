// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package convoy

import (
	"encoding/json"
)

type TestSubscriptionFunctionRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectID"`
	// Function Details
	FunctionRequest FunctionRequest `request:"mediaType=application/json"`
}

func (o *TestSubscriptionFunctionRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *TestSubscriptionFunctionRequest) GetFunctionRequest() FunctionRequest {
	if o == nil {
		return FunctionRequest{}
	}
	return o.FunctionRequest
}

// TestSubscriptionFunctionNotFoundError - Not Found
type TestSubscriptionFunctionNotFoundError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &TestSubscriptionFunctionNotFoundError{}

func (e *TestSubscriptionFunctionNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TestSubscriptionFunctionUnauthorizedError - Unauthorized
type TestSubscriptionFunctionUnauthorizedError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &TestSubscriptionFunctionUnauthorizedError{}

func (e *TestSubscriptionFunctionUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TestSubscriptionFunctionBadRequestError - Bad Request
type TestSubscriptionFunctionBadRequestError struct {
	Message  *string      `json:"message,omitempty"`
	Status   *bool        `json:"status,omitempty"`
	Data     *Object      `json:"data,omitempty"`
	HTTPMeta HTTPMetadata `json:"-"`
}

var _ error = &TestSubscriptionFunctionBadRequestError{}

func (e *TestSubscriptionFunctionBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TestSubscriptionFunctionResponseBody - OK
type TestSubscriptionFunctionResponseBody struct {
	Message *string           `json:"message,omitempty"`
	Status  *bool             `json:"status,omitempty"`
	Data    *FunctionResponse `json:"data,omitempty"`
}

func (o *TestSubscriptionFunctionResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *TestSubscriptionFunctionResponseBody) GetStatus() *bool {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *TestSubscriptionFunctionResponseBody) GetData() *FunctionResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

type TestSubscriptionFunctionResponse struct {
	HTTPMeta HTTPMetadata `json:"-"`
	// OK
	Object *TestSubscriptionFunctionResponseBody
}

func (o *TestSubscriptionFunctionResponse) GetHTTPMeta() HTTPMetadata {
	if o == nil {
		return HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *TestSubscriptionFunctionResponse) GetObject() *TestSubscriptionFunctionResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
